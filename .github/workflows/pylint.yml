name: Pylint

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10.13" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: 3.10

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.6.1

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
           path: .venv
           key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: python -m pip install --upgrade pip
          poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - name: pylint backend
        working-directory: backend
        run: |
          poetry run pylint --init-hook="import sys; sys.path.append('backend')" $(git ls-files '*.py')

      - name: pylint frontend
        working-directory: frontend
        run: |
          poetry run pylint --init-hook="import sys; sys.path.append('frontend')" $(git ls-files '*.py')
